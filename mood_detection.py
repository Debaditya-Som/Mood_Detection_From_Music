# -*- coding: utf-8 -*-
"""Mood_Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DgMV576O8SIB6pP013nqYKR6Ro1HqP9X
"""

#pip install librosa matplotlib scikit-learn

import librosa
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

import librosa.display
audio_path = librosa.example('nutcracker')
y, sr = librosa.load(audio_path)

from google.colab import files
uploaded = files.upload()
for file_name in uploaded.keys():
    y, sr = librosa.load(file_name)
    print(f'Loaded {file_name} successfully!')

print(y)
print(sr)

#correctly executed till now

training_features = [
    [120, 2000, 0.6, -100, -80],  # Song 1 - Energetic
    [60, 1000, 0.3, -110, -90],    # Song 2 - Calm
    [85, 1500, 0.4, -105, -85],    # Song 3 - Sad
    [100, 2500, 0.7, -95, -75],    # Song 4 - Happy
    [90, 2200, 0.65, -98, -78],    # Song 5 - Energetic
    [70, 1200, 0.35, -115, -95]    # Song 6 - Calm
]

labels = ['Energetic', 'Calm', 'Sad', 'Happy', 'Energetic', 'Calm']

tempo, _ = librosa.beat.beat_track(y=y, sr=sr)
spectral_centroid = librosa.feature.spectral_centroid(y=y, sr=sr)
spectral_centroid_mean = float(np.mean(spectral_centroid))

mfccs = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=5)
mfccs_mean = np.mean(mfccs, axis=1)

feature_vector = [
    float(tempo),
    spectral_centroid_mean,
] + list(mfccs_mean[:3])

print(f'Raw Feature Vector: {feature_vector}')
print(f'Raw Feature Vector Shape: {len(feature_vector)}')

feature_vector_np = np.array(feature_vector, dtype=float).reshape(1, -1)

X_train, X_test, y_train, y_test = train_test_split(training_features, labels, test_size=0.2, random_state=42)

model = KNeighborsClassifier(n_neighbors=3)
model.fit(X_train, y_train)


predicted_mood = model.predict(feature_vector_np)
print(f'The predicted mood for the song is: {predicted_mood[0]}')